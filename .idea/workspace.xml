<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="be2dc649-06f7-4416-8cfe-24c07a98e8f8" name="Changes" comment="Структуры , подключение">
      <change beforePath="$PROJECT_DIR$/database/db.go" beforeDir="false" afterPath="$PROJECT_DIR$/database/db.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/dto/errorDto/responseError.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/dto/errorDto/responseError.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/pvz/handler_pvz.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/pvz/handler_pvz.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/pvz/model_pvz.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/pvz/model_pvz.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/pvz/repo_pvz.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/pvz/repo_pvz.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/pvz/service_pvz.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/pvz/service_pvz.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/receptions/handler_reception.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/receptions/handler_reception.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/receptions/model_reception.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/receptions/model_reception.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/receptions/repo_reception.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/receptions/repo_reception.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/receptions/service_reception.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/receptions/service_reception.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/server/server_start.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/server/server_start.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/users/handler_user.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/users/handler_user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/users/model_user.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/users/model_user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/users/repo_user.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/users/repo_user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/users/service_user.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/users/service_user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/users/user_repository_interface.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/users/user_repository_interface.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/users/user_service_interface.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/users/user_service_interface.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/midware/author_role_bearer_token.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/midware/author_role_bearer_token.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/repos/repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/repos/repository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/postgres-data/base/16384/pg_internal.init" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/postgres-data/base/5/pg_internal.init" beforeDir="false" afterPath="$PROJECT_DIR$/postgres-data/base/5/pg_internal.init" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/postgres-data/global/1260" beforeDir="false" afterPath="$PROJECT_DIR$/postgres-data/global/1260" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/postgres-data/global/pg_control" beforeDir="false" afterPath="$PROJECT_DIR$/postgres-data/global/pg_control" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/postgres-data/global/pg_internal.init" beforeDir="false" afterPath="$PROJECT_DIR$/postgres-data/global/pg_internal.init" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/postgres-data/pg_wal/000000010000000000000001" beforeDir="false" afterPath="$PROJECT_DIR$/postgres-data/pg_wal/000000010000000000000001" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/postgres-data/pg_xact/0000" beforeDir="false" afterPath="$PROJECT_DIR$/postgres-data/pg_xact/0000" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/postgres-data/postmaster.pid" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Dockerfile" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go1.23.4" />
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="develop" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Yourazak&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/Yourazak/avitotest.git&quot;,
    &quot;accountId&quot;: &quot;743e311c-1ef4-41b0-ba75-27bf0fbfc036&quot;
  }
}</component>
  <component name="KubernetesApiPersistence"><![CDATA[{}]]></component>
  <component name="KubernetesApiProvider"><![CDATA[{
  "isMigrated": true
}]]></component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2voKqSoHg1siobbjaI52X79GWWU" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Docker.docker-compose.yaml: Compose Deployment.executor": "Run",
    "Go Build.go build avitotes/cmd.executor": "Run",
    "Go Build.go build avitotest.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "C:/Users/youra",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "org.jetbrains.plugins.github.ui.GithubSettingsConfigurable"
  },
  "keyToStringList": {
    "DatabaseDriversLRU": [
      "postgresql",
      "mysql_aurora"
    ]
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\youra\PROJECTS\avitotest\reseptions" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\youra\PROJECTS\avitotest\interal" />
      <recent name="C:\Users\youra\PROJECTS\avitotest" />
      <recent name="C:\Users\youra\PROJECTS\avitotest\pkg" />
      <recent name="C:\Users\youra\PROJECTS\avitotest\variable" />
      <recent name="C:\Users\youra\PROJECTS\avitotest\oldtask" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build avitotes/cmd">
    <configuration name="go build avitotes/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="avitotest" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="avitotes/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build avitotest" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="avitotest" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="avitotest" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yaml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="docker-compose.yaml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.yaml: Compose Deployment" />
      <item itemvalue="Go Build.go build avitotest" />
      <item itemvalue="Go Build.go build avitotes/cmd" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build avitotes/cmd" />
        <item itemvalue="Docker.docker-compose.yaml: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-5df93f7ad4aa-df9ad98b711f-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-242.24807.19" />
        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-GO-242.24807.19" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName=".env" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Подключение config" />
    <MESSAGE value="Структуры + создание router/подключение server" />
    <MESSAGE value="Структуры , подключение" />
    <option name="LAST_COMMIT_MESSAGE" value="Структуры , подключение" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>